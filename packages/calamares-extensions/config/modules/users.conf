# SPDX-FileCopyrightText: no
# SPDX-License-Identifier: CC0-1.0
#
# Configuration for the one-user-system user module.
#
# Besides these settings, the users module also places the following
# keys into the Global Storage area, based on user input in the view step.
#
# - hostname
# - username
# - password (obscured)
# - autologinUser (if enabled, set to username)
#
# These Global Storage keys are set when the configuration for this module
# is read and when they are modified in the UI.
---
### GROUPS CONFIGURATION
#
# The system has groups of uses. Some special groups must be
# created during installation. Optionally, there are special
# groups for users who can use sudo and for supporting autologin.

# Used as default groups for the created user.
# Adjust to your Distribution defaults.
#
# Each entry in the *defaultGroups* list is either:
#   - a string, naming a group; this is a **non**-system group
#     which does not need to exist in the target system; if it
#     does not exist, it will be created.
#   - an entry with subkeys *name*, *must_exist* and *system*;
#     if the group *must_exist* and does not, an error is thrown
#     and the installation fails.
#
#     The group is created if it does not exist, and it is
#     created as a system group (GID < 1000) or user group
#     (GID >= 1000) depending on the value of *system*.
defaultGroups:
    - users
    - networkmanager
    - wheel

### ROOT AND SUDO
#
# Some distributions have a root user enabled for login. Others
# rely entirely on sudo or similar mechanisms to raise privileges.

# Setting this to false, causes the root account to be disabled.
# When disabled, hides the "Use the same password for administrator"
# checkbox. Also hides the "Choose a password" and associated text-inputs.
setRootPassword: false


### PASSWORDS AND LOGIN
#
# Autologin is convenient for single-user systems, but depends on
# the location of the machine if it is practical. "Password strength"
# measures measures might improve security by enforcing hard-to-guess
# passwords, or might encourage a post-it-under-the-keyboard approach.
# Distributions are free to steer their users to one kind of password
# or another. Weak(er) passwords may be allowed, may cause a warning,
# or may be forbidden entirely.

# You can control the initial state for the 'autologin checkbox' here.
# Possible values are:
#  - true to check or
#  - false to uncheck
# These set the **initial** state of the checkbox.
doAutologin:     true


# User settings
#
# The user can enter a username, but there are some other
# hidden settings for the user which are configurable in Calamares.
#
# Key *user* has the following sub-keys:
#
# - *shell* Shell to be used for the regular user of the target system.
#   There are three possible kinds of settings:
#    - unset (i.e. commented out, the default), act as if set to /bin/bash
#    - empty (explicit), don't pass shell information to useradd at all
#      and rely on a correct configuration file in /etc/default/useradd
#    - set, non-empty, use that path as shell. No validation is done
#      that the shell actually exists or is executable.
# - *forbidden_names* Login names that may not be used. This list always
#   contains "root" and "nobody", but may be extended to list other special
#   names for a given distro (eg. "video", or "mysql" might not be a valid
#   end-user login name).
user:
  shell: /run/current-system/sw/bin/bash
  forbidden_names: [ root ]


# Hostname settings
#
# The user can enter a hostname; this is configured into the system
# in some way. There are settings for how a hostname is guessed (as
# a default / suggestion) and where (or how) the hostname is set in
# the target system.
#
# Key *hostname* has the following sub-keys:
#
# - *location* How the hostname is set in the target system:
#   - *None*, to not set the hostname at all
#   - *EtcFile*, to write to `/etc/hostname` directly
#   - *Etc*, identical to above
#   - *Hostnamed*, to use systemd hostnamed(1) over DBus
#   - *Transient*, to remove `/etc/hostname` from the target
#   The default is *EtcFile*. Setting this to *None* or *Transient* will
#   hide the hostname field.
# - *writeHostsFile* Should /etc/hosts be written with a hostname for
#   this machine (also adds localhost and some ipv6 standard entries).
#   Defaults to *true*.
# - *template* Is a simple template for making a suggestion for the
#   hostname, based on user data. The default is "${first}-${product}".
#   This is used only if the hostname field is shown. KMacroExpander is
#   used; write `${key}` where `key` is one of the following:
#   - *first* User's first name (whatever is first in the User Name field,
#     which is first-in-order but not necessarily a "first name" as in
#     "given name" or "name by which you call someone"; beware of western bias)
#   - *name* All the text in the User Name field.
#   - *login* The login name (which may be suggested based on User Name)
#   - *product* The hardware product, based on DMI data
#   - *product2* The product as described by Qt
#   - *cpu* CPU name
#   - *host* Current hostname (which may be a transient hostname)
#   Literal text in the template is preserved. Calamares tries to map
#   `${key}` values to something that will fit in a hostname, but does not
#   apply the same to literal text in the template. Do not use invalid
#   characters in the literal text, or no suggeston will be done.
# - *forbidden_names* lists hostnames that may not be used. This list
#   always contains "localhost", but may list others that are unsuitable
#   or broken in special ways.
hostname:
  location: Transient
  writeHostsFile: false
  forbidden_names: [ localhost ]

presets:
    fullName:
        # value: "OEM User"
        editable: true
    loginName:
        # value: "oem"
        editable: true
